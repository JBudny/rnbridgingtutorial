diff --git a/android/build.gradle b/android/build.gradle
index ff1fbdd22895b4d60da075e223e4dc76516677cc..8d4945264982fd0e927a722332f67f4f1cf04a8c 100644
--- a/android/build.gradle
+++ b/android/build.gradle
@@ -1,8 +1,8 @@
 
-buildscript {    
+buildscript {
     repositories {
         google()
-        jcenter()
+        gradlePluginPortal()
     }
     dependencies {
         classpath 'com.android.tools.build:gradle:3.2.0'
@@ -13,6 +13,42 @@ def isNewArchitectureEnabled() {
     return project.hasProperty("newArchEnabled") && project.newArchEnabled == "true"
 }
 
+// Let's detect react-native's directory, it will be used to determine RN's version
+// https://github.com/software-mansion/react-native-reanimated/blob/cda4627c3337c33674f05f755b7485165c6caca9/android/build.gradle#L88
+def resolveReactNativeDirectory() {
+  def reactNativeLocation = safeExtGet("REACT_NATIVE_NODE_MODULES_DIR", null)
+  if (reactNativeLocation != null) {
+    return file(reactNativeLocation)
+  }
+
+  // monorepo workaround
+  // react-native can be hoisted or in project's own node_modules
+  def reactNativeFromProjectNodeModules = file("${rootProject.projectDir}/../node_modules/react-native")
+  if (reactNativeFromProjectNodeModules.exists()) {
+    return reactNativeFromProjectNodeModules
+  }
+
+  def reactNativeFromNodeModules = file("${projectDir}/../../react-native")
+  if (reactNativeFromNodeModules.exists()) {
+    return reactNativeFromNodeModules
+  }
+
+  throw new GradleException(
+    "[navigation-react-native] Unable to resolve react-native location in " +
+    "node_modules. You should project extension property (in app/build.gradle) " +
+    "`REACT_NATIVE_NODE_MODULES_DIR` with path to react-native."
+  )
+}
+
+// https://github.com/software-mansion/react-native-reanimated/blob/cda4627c3337c33674f05f755b7485165c6caca9/android/build.gradle#L199#L205
+def reactNativeRootDir = resolveReactNativeDirectory()
+
+def reactProperties = new Properties()
+file("$reactNativeRootDir/ReactAndroid/gradle.properties").withInputStream { reactProperties.load(it) }
+
+def REACT_NATIVE_VERSION = reactProperties.getProperty("VERSION_NAME")
+def REACT_NATIVE_MINOR_VERSION = REACT_NATIVE_VERSION.startsWith("0.0.0-") ? 1000 : REACT_NATIVE_VERSION.split("\\.")[1].toInteger()
+
 apply plugin: 'com.android.library'
 if (isNewArchitectureEnabled()) {
     apply plugin: 'com.facebook.react'
@@ -32,6 +68,21 @@ android {
         buildConfigField "boolean", "IS_NEW_ARCHITECTURE_ENABLED", isNewArchitectureEnabled().toString()
         versionCode 1
         versionName "1.0"
+        if (isNewArchitectureEnabled()) {
+            externalNativeBuild {
+                cmake {
+                    abiFilters (*reactNativeArchitectures())
+                }
+            }
+        }
+    }
+
+    if (isNewArchitectureEnabled()) {
+        externalNativeBuild {
+            cmake {
+                abiFilters (*reactNativeArchitectures())
+            }
+        }
     }
 
     sourceSets {
@@ -60,7 +111,11 @@ repositories {
 }
 
 dependencies {
-    implementation 'com.facebook.react:react-native:+'
+    if (REACT_NATIVE_MINOR_VERSION >= 71) {
+        implementation 'com.facebook.react:react-android'
+    } else {
+        implementation 'com.facebook.react:react-native:+'
+    }
     implementation 'com.google.android.material:material:1.6.1'
     implementation 'androidx.viewpager2:viewpager2:1.0.0'
 }
diff --git a/cpp/CMakeLists.txt b/cpp/CMakeLists.txt
index 67dbaa891153af5d7a4076074d6e470b62a3464f..216e89260cf053bc4fc6de296cd0514670bec37b 100644
--- a/cpp/CMakeLists.txt
+++ b/cpp/CMakeLists.txt
@@ -19,6 +19,8 @@ add_library(
   ${react_codegen_SRCS}
 )
 
+find_package(ReactAndroid REQUIRED CONFIG)
+
 target_include_directories(
   react_codegen_navigationreactnative
   PUBLIC
@@ -31,20 +33,21 @@ target_include_directories(
 target_link_libraries(
   react_codegen_navigationreactnative
   fbjni
-  folly_runtime
-  glog
-  jsi
-  react_codegen_rncore
-  react_debug
-  react_nativemodule_core
-  react_render_core
-  react_render_mapbuffer
-  react_render_imagemanager
-  react_render_debug
-  react_render_graphics
-  rrc_view
-  turbomodulejsijni
-  yoga
+  ReactAndroid::folly_runtime
+  ReactAndroid::glog
+  ReactAndroid::jsi
+  ReactAndroid::react_codegen_rncore
+  ReactAndroid::react_debug
+  ReactAndroid::react_nativemodule_core
+  ReactAndroid::react_render_core
+  ReactAndroid::react_render_mapbuffer
+  ReactAndroid::react_render_imagemanager
+  ReactAndroid::react_render_debug
+  ReactAndroid::react_render_graphics
+  ReactAndroid::rrc_image
+  ReactAndroid::rrc_view
+  ReactAndroid::turbomodulejsijni
+  ReactAndroid::yoga
 )
 
 target_compile_options(
